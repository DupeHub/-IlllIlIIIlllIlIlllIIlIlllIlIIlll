do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==5) then function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v31)if (v2(v31,2)==79) then v20=v1(v4(v31,1,1));return "";else local v65=0;local v66;while true do if (0==v65) then v66=v3(v1(v31,16));if v20 then local v79=0;local v80;while true do if (v79==0) then v80=v6(v66,v20);v20=nil;v79=1;end if (v79==1) then return v80;end end else return v66;end break;end end end end);v21=nil;v18=1;end if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v39=0;local v40;local v41;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v39==(836 -(161 + 673))) then v44=nil;v45=nil;v39=4 -1;end if (v39==3) then v46=nil;v47=nil;v39=3 + 1;end if (v39==(3 -2)) then v42=nil;v43=nil;v39=340 -(190 + 148);end if ((0 -0)~=v39) then else v40=0;v41=nil;v39=1 + 0;end if (v39==4) then while true do if (v40~=1) then else local v76=0;while true do if (0==v76) then v43=nil;v44=nil;v76=242 -(5 + 236);end if (v76~=1) then else v40=2;break;end end end if (v40~=3) then else v47=nil;while true do local v81=0;local v82;while true do if (v81~=(0 -0)) then else v82=0;while true do if (v82==1) then if (v41==0) then local v102=0;local v103;while true do if (v102==(636 -(19 + 617))) then v103=0;while true do if ((1 + 0)==v103) then local v109=0 + 0;while true do if (v109~=(1248 -(1120 + 127))) then else v103=3 -1;break;end if (v109~=(0 -0)) then else v44={};v45={v42,v43,nil,v44};v109=1;end end end if (v103==2) then v41=1 + 0;break;end if (v103==0) then v42={};v43={};v103=3 -2;end end break;end end end break;end if (0~=v82) then else local v101=0;while true do if (v101==0) then if (1~=v41) then else local v106=0;while true do if (1~=v106) then else for v111=1 + 0,v46 do local v112=0;local v113;local v114;local v115;while true do if ((1 -0)~=v112) then else v115=nil;while true do if (v113==(1401 -(192 + 1209))) then local v181=0;local v182;while true do if (v181==0) then v182=0 + 0;while true do if (1~=v182) then else v113=1 -0;break;end if (0==v182) then v114=v22();v115=nil;v182=1;end end break;end end end if (v113~=1) then else if (v114==(1 -0)) then v115=v22()~=0;elseif (v114==2) then v115=v25();elseif (v114==(7 -4)) then v115=v26();end v47[v111]=v115;break;end end break;end if (v112==0) then local v119=0;local v120;while true do if (v119==(0 -0)) then v120=0 -0;while true do if (v120~=1) then else v112=1;break;end if (0~=v120) then else local v203=0 + 0;while true do if (v203~=(0 -0)) then else v113=0;v114=nil;v203=1 + 0;end if (v203==(1 + 0)) then v120=1;break;end end end end break;end end end end end v45[3]=v22();v106=1 + 1;end if ((29 -(9 + 18))==v106) then v41=2;break;end if (0~=v106) then else v46=v24();v47={};v106=1 + 0;end end end if (v41~=(550 -(230 + 318))) then else local v107=455 -(275 + 180);local v108;while true do if (v107==(0 -0)) then v108=1294 -(1116 + 178);while true do if (v108==1) then local v117=0;while true do if (v117~=0) then else for v184=1,v24() do v44[v184]=v24();end return v45;end end end if (0~=v108) then else local v118=0 + 0;while true do if (v118==(0 + 0)) then for v186=1 + 0,v24() do local v187=0;local v188;local v189;while true do if (v187==(0 -0)) then v188=0 -0;v189=nil;v187=1 + 0;end if (v187~=1) then else while true do if (v188~=(0 + 0)) then else v189=v22();if (v21(v189,1 + 0,1 + 0)~=(1688 -(332 + 1356))) then else local v244=0;local v245;local v246;local v247;local v248;while true do if (v244==0) then v245=0 + 0;v246=nil;v244=1 + 0;end if (2~=v244) then else while true do if (3~=v245) then else if (v21(v247,11 -8,3 + 0)==1) then v248[4]=v47[v248[4]];end v42[v186]=v248;break;end if (v245==2) then local v270=754 -(251 + 503);while true do if (0~=v270) then else if (v21(v247,1,1153 -(588 + 564))==(4 -3)) then v248[2 + 0]=v47[v248[209 -(118 + 89)]];end if (v21(v247,5 -3,2)~=1) then else v248[3 + 0]=v47[v248[3]];end v270=3 -2;end if (1==v270) then v245=3;break;end end end if (v245==(1 -0)) then local v271=0;while true do if ((1 -0)~=v271) then else v245=2;break;end if ((1105 -(890 + 215))==v271) then v248={v23(),v23(),nil,nil};if (v246==(771 -(597 + 174))) then local v286=0 + 0;while true do if (v286==(726 -(196 + 530))) then v248[7 -4]=v23();v248[4]=v23();break;end end elseif (v246==1) then v248[7 -4]=v24();elseif (v246==2) then v248[10 -7]=v24() -((7 -5)^16);elseif (v246~=3) then else local v294=0;local v295;local v296;local v297;while true do if (v294==1) then v297=nil;while true do if (v295==(3 -2)) then while true do if (v296==0) then v297=0;while true do if (v297~=(0 -0)) then else v248[5 -2]=v24() -(2^16);v248[4]=v23();break;end end break;end end break;end if (v295~=0) then else v296=0 + 0;v297=nil;v295=3 -2;end end break;end if (v294~=(225 -(161 + 64))) then else v295=0;v296=nil;v294=1;end end end v271=1 + 0;end end end if (v245~=(1591 -(529 + 1062))) then else local v272=0;while true do if (v272~=0) then else local v283=0 -0;while true do if (v283==(0 + 0)) then v246=v21(v189,1219 -(766 + 451),3);v247=v21(v189,4,6);v283=1 + 0;end if (v283~=1) then else v272=3 -2;break;end end end if (1==v272) then v245=1;break;end end end end break;end if (v244~=(2 -1)) then else v247=nil;v248=nil;v244=1183 -(175 + 1006);end end end break;end end break;end end end for v190=1 + 0,v24() do v43[v190-(348 -(79 + 268))]=v29();end v118=1;end if (v118==1) then v108=1 + 0;break;end end end end break;end end end v101=1;end if (v101==(1 -0)) then v82=1 + 0;break;end end end end break;end end end break;end if (v40==(0 + 0)) then local v77=0 -0;while true do if (v77~=0) then else v41=668 -(213 + 455);v42=nil;v77=1;end if (v77==1) then v40=1 + 0;break;end end end if (v40~=(1 + 1)) then else local v78=0 + 0;while true do if ((0 + 0)==v78) then v45=nil;v46=nil;v78=1 + 0;end if (v78==(2 -1)) then v40=3;break;end end end end break;end end end v18=5;end if (v18==5) then v30=nil;function v30(v32,v33,v34)local v48=v32[1];local v49=v32[2];local v50=v32[3];return function(...)local v67=0;local v68;local v69;local v70;local v71;local v72;while true do if (v67==3) then A,B=v28(v11(v72));if  not A[1] then local v83=v32[4][v68] or "?";error("Script error at ["   .. v83   .. "]:"   .. A[2]);else return v13(A,2,B);end break;end if (v67==0) then v68=1;v69= -1;v67=1;end if (v67==1) then v70={...};v71=v12("#",...) -1;v67=2;end if (v67==2) then v72=nil;function v72()local v84=v48;local v85=Const;local v86=v49;local v87=v50;local v88=v28;local v89={};local v90={};local v91={};for v95=0 + 0,v71 do if (((10934 -(7983 -(487 + 942)))>(1464 -(101 + 261))) and (v95>=v87)) then v89[v95-v87]=v70[v95 + (391 -(66 + 27 + 297))];else v91[v95]=v70[v95 + 1 + 0];end end local v92=(v71-v87) + (1011 -(18 + 992));local v93;local v94;while true do local v96=1831 -(476 + 1355);local v97;local v98;while true do if (((18 + 31 + 910)<=(1464 + 503)) and ((1684 -(908 + 776))==v96)) then v97=(2346 -591) -(784 + 151 + 820);v98=nil;v96=1 + 0;end if (((1758 -(128 + 795))<(540 + 716)) and (v96==(1314 -(840 + 192 + 281)))) then while true do if ((v97==(0 + 0)) or ((3286 -2209)>=(5016 -((1183 -765) + 1517)))) then v98=0 -0;while true do if (((7697 -3834)>=(3278 -1664)) and (v98==((537 -(254 + 282)) -0))) then if ((v94<=(42 -27)) or (4627<=(9559 -7472))) then if ((v94<=(12 -5)) or ((6722 -2596)<(3032 -(315 + 53)))) then if (((10123 -6542)>(4133 -(1455 + 207))) and (v94<=(1936 -(144 + 335 + 1454)))) then if (((1954 + 481)==(3314 -(32 + 847))) and (v94<=(340 -(41 + 298)))) then if ((v94>(0 -(0 -0))) or ((2631 -(1101 + 807))>(6341 -(1540 + 100)))) then if ((v91[v93[2 + 0]]==v93[1 + 3]) or (((6829 -3313) -(622 + 1129))>=(4438 -(89 + 24)))) then v68=v68 + (12 -(9 + 2));else v68=v93[1183 -(787 + 393)];end else v91[v93[1 + 1]]=v91[v93[14 -11]][v91[v93[9 -5]]];end elseif ((v94>(8 -6)) or ((4286 -(188 + 1268))==(2006 + 352))) then local v122=0 + (0 -0);local v123;local v124;local v125;local v126;local v127;local v128;while true do if ((v122==(10 -7)) or ((2011 -(728 + 104))==(17073 -13444))) then while true do if ((v123==(1 + 1 + 0)) or ((2612 -(963 + 771))>(4417 -(1520 + 90)))) then v128=nil;while true do if ((v124==(253 -(93 + 158))) or ((5230 -(103 + 1128))<(7127 -5250))) then for v253=v125,v69 do local v254=(2769 -(110 + 1887)) -(432 + 258 + 82);local v255;while true do if ((v254==(598 -(325 + 273))) or ((3623 -(114 + 344))<1633)) then v255=1109 -(500 + 609);while true do if (((5622 -(1243 + 187 + 535))>(1739 -((1672 -(673 + 493)) + 465))) and (v255==(0 -0))) then v128=v128 + (2 -1);v91[v253]=v126[v128];break;end end break;end end end break;end if ((v124==(1 + 0)) or (737<=(1281 -(672 + 261)))) then local v249=1755 -(909 + (3684 -2838));local v250;while true do if ((v249==(0 -0)) or (((4480 -(112 + 1266)) -(1245 + 657))>=(2653 -(90 + 139)))) then v250=0 -0;while true do if (((1371 + 596 + 1909)==(12814 -8938)) and (v250==(1 + 0))) then v124=4 -2;break;end if (((5896 -(845 + 185))==(8130 -3264)) and ((0 -0)==v250)) then v69=(v127 + v125) -(1 -0);v128=(1631 + 133) -(150 + 1614);v250=1;end end break;end end end if ((v124==(0 -0)) or ((131 + 3371)>=((8857 -(176 + 8)) -5119))) then local v251=168 -(30 + 138);while true do if ((((2348 + 2203) -((1448 -801) + 992))<=(1501 + 172 + 1879)) and (v251==(0 + 0))) then v125=v93[2 + 0];v126,v127=v88(v91[v125](v13(v91,v125 + 1 + 0 + 0,v93[3])));v251=2 -1;end if (((1281 + 193)<(9433 -5892)) and (v251==(3 -2))) then v124=3 -2;break;end end end end break;end if ((v123==(1 + 0)) or ((1476 -(310 + (1400 -(471 + 781))))>=(5597 -(4061 -(587 + 1330))))) then local v219=1443 -(945 + 498);while true do if ((v219==(0 + 0)) or (((8553 -(218 + 4)) -6561)<=(199 -50))) then v126=nil;v127=nil;v219=1;end if (((7085 -4382)<(11279 -7438)) and (v219==(3 -2))) then v123=1005 -(587 + (1283 -(496 + 371)));break;end end end if (((341 + 472)>((578 + 993) -870)) and (v123==(1704 -(255 + 1449)))) then local v220=0 -0;while true do if ((v220==(800 -((1975 -(254 + 1035)) + 114))) or ((3095 -(927 + 297))<(1765 -(196 + 98)))) then v124=148 -(78 + 70);v125=nil;v220=1665 -(1091 + 573);end if (((1019 -(958 + 60))==v220) or ((7732 -2874)<=(654 + 1591))) then v123=940 -(434 + 505);break;end end end end break;end if ((v122==(1 + 1)) or ((7178 -4527)>(888 + 951 + 1633))) then v127=nil;v128=nil;v122=340 -(60 + 277);end if ((v122==(0 + 0)) or ((4090 + 798)<(3712 + 288))) then v123=0 + 0;v124=nil;v122=1 + 0;end if ((v122==(2 -1)) or ((3909 -(1037 + 89 + 527))<=(1540 -(353 + 363)))) then v125=nil;v126=nil;v122=4 -2;end end else local v129=0;local v130;while true do if ((v129==(1706 -(1517 + 189))) or ((1213 + 1062)==(14188 -10942))) then v130=v93[(2 -1) + 1];v91[v130]=v91[v130]();break;end end end elseif ((v94<=((522 + 831) -(343 + 1005))) or ((3565 -(1537 + (1455 -1047)))<=(567 -398))) then if (((4629 -1669)>(300 + 283)) and (v94==(1 + 3))) then v91[v93[247 -(30 + 215)]]=v30(v86[v93[480 -(153 + 324)]],nil,v34);else local v132=0 + 0;local v133;local v134;local v135;local v136;while true do if (((142 + 141)<(5942 -3806)) and (v132==((892 -477) -(45 + 369)))) then v135=nil;v136=nil;v132=1398 -(1011 + 385);end if (((1882 -(795 + 94))<=(5904 -(22 + 1026))) and ((37 -(25 + 8 + 2))==v132)) then while true do if ((v133==(0 -0)) or (1711==(3235 -1666))) then v134=v93[2 -0];v135={v91[v134](v91[v134 + (1 -0)])};v133=2 -1;end if (((4959 -(1316 + 450))>=(450 -299)) and ((600 -(212 + 387))==v133)) then v136=0 -0;for v230=v134,v93[4 + 0] do local v231=265 -(18 + 247);local v232;while true do if ((v231==(0 -0)) or ((3749 -(14 + 1940))>=(13326 -8507))) then v232=0 -0;while true do if ((((10231 -5866) -(1416 + 390))<=(180 + 109 + 2720)) and (v232==(0 -0))) then v136=v136 + 1 + 0;v91[v230]=v135[v136];break;end end break;end end end break;end end break;end if (((1881 -479)<((10315 -(480 + 981)) -4318)) and ((0 + 0)==v132)) then v133=143 -(38 + 105);v134=nil;v132=4 -3;end end end elseif ((((770 -447) + 145 + 29)<=(2203 -(942 + 736))) and (v94==(711 -(407 + 298)))) then local v137=0 -0;local v138;local v139;local v140;while true do if ((v137==((4963 -3101) -((4801 -3156) + 216))) or ((1767 -((2174 -(1586 + 136)) + 325))>(5771 -(515 + (2062 -(647 + 1035)))))) then v140=nil;while true do if (((1 + 0)==v138) or ((2343 -(119 + 620))>(1330 + 1329))) then v91[v139 + (4 -(11 -8))]=v140;v91[v139]=v140[v93[629 -(216 + 409)]];break;end if ((((1908 -984) -(1367 -(497 + 400)))<=((2011 -(1793 + 48)) + 315)) and (v138==(0 -0))) then local v223=0 + 0 + 0;local v224;while true do if (((0 -0)==v223) or ((4984 -(96 + 81 + 164))<(4444 -2832))) then v224=0 + (1122 -(498 + 624));while true do if (((0 -0)==v224) or ((5576 -(296 + 521))<(1719 + 453))) then local v263=308 -(33 + 275);while true do if ((v263==(0 + 0)) or ((6973 -4143)>=(8620 -4947))) then v139=v93[5 -3];v140=v91[v93[9 -6]];v263=1 + (1218 -(715 + 503));end if (((4035 -(806 + 895))>(2478 -1664)) and (v263==(1 + 0))) then v224=1 + 0;break;end end end if ((v224==(1 + (0 -0))) or ((1321 -(349 + 731))>=(6718 -(1350 + 466)))) then v138=1 -0;break;end end break;end end end end break;end if (((0 -0)==v137) or ((3161 + 982)==(649 + 601))) then local v198=1810 -(559 + 1251);while true do if (((1820 -540)<=(4925 -(1593 + 368))) and (v198==((1603 -834) -(683 + 85)))) then v137=1 + 0;break;end if (((2577 -(299 + 563))>(318 -(33 + 64))) and (v198==(0 + 0))) then v138=28 -(25 + (6 -3));v139=nil;v198=2 -1;end end end end else v91[v93[385 -(60 + 138 + 185)]]=v93[350 -(17 + (470 -140))];end elseif ((v94<=(17 -6)) or ((592 + 1112)<=(120 + 330))) then if (((21771 -17340)>=(6555 -4145)) and (v94<=(31 -22))) then if ((v94==8) or ((3750 -((85 -63) + 1792))>=((2717 + 6385) -4242))) then v91[v93[1 + 1]]=v34[v93[1531 -(504 + 1024)]];else v91[v93[2 + 0]]=v91[v93[1671 -(1642 + (927 -(411 + 490)))]];end elseif ((v94>(5 + 5 + 0)) or ((617 + 444)>(2060 -735))) then if (((1466 -(392 + 321))<=(835 + 115)) and v91[v93[775 -(507 + 266)]]) then v68=v68 + 1 + 0;else v68=v93[1730 -(1421 + 306)];end else local v144=0 + 0;local v145;local v146;while true do if ((v144==(0 + 0)) or ((3058 + 1657)<(4593 -3428))) then v145=0 + 0;v146=nil;v144=1 -0;end if (((8569 -5431)==(3369 -(123 + 108))) and (v144==(1 + (1782 -(1251 + 531))))) then while true do if ((v145==(0 + 0)) or ((2664 -1542)>=(688 + 99 + 1096))) then v146=v93[2];v91[v146](v91[v146 + 1 + 0]);break;end end break;end end end elseif ((v94<=(26 -13)) or ((19 + 196)==2229)) then if (((1664 -1185)==(738 -(1344 -(50 + 1035)))) and (v94==(1845 -(1344 + 489)))) then v68=v93[2 + 1];else local v147=1964 -(1478 + 486);local v148;local v149;while true do if ((((462 -(23 + 154)) + (5620 -(326 + 871)))>=(1977 -1240)) and ((0 + 0)==v147)) then local v199=0 + 0;while true do if ((v199==(0 -0)) or ((431 + 562)>((1934 -(177 + 212)) -(25 + 17)))) then v148=780 -(603 + 177);v149=nil;v199=1030 -(796 + 233);end if (((2728 -(71 + 255))<=(5163 -(331 + 290))) and (v199==(2 -1))) then v147=1746 -(1692 + 53);break;end end end if (((2067 -(874 + 60))<=(1361 + 1188)) and (v147==(3 -2))) then while true do if (((2269 -1519)<=2202) and (v148==(0 + 0))) then v149=v93[3 -(1 + 0)];v91[v149]=v91[v149](v13(v91,v149 + (1104 -(887 + 216)),v69));break;end end break;end end end elseif (((1594 -(120 + 584))<1830) and (v94==(8 + 6))) then local v150=0 + 0;local v151;local v152;local v153;local v154;while true do if ((((13431 -(714 + 1013)) -7325)<(5139 -(408 + 173))) and (v150==(1 -0))) then v153=nil;v154=nil;v150=1 + 1;end if (((520 + 4373)>=(2965 -(629 + 42))) and (v150==(0 + 0))) then v151=0 + 0;v152=nil;v150=1965 -(605 + 1359);end if (((5575 -1426)>=(136 + 585)) and ((1 + 1)==v150)) then while true do if (((4360 -(495 + 1077))>(1851 -995)) and (v151==(1 + 0))) then v154=0 + 0;for v233=v152,v93[12 -8] do local v234=0 -0;local v235;local v236;while true do if (((9970 -(7064 + 907))==(1882 + 117)) and (v234==(1628 -(839 + 468 + 321)))) then v235=1364 -(1280 + 84);v236=nil;v234=3 -2;end if (((4164 -2434)>(874 + 228)) and ((1 + 0)==v234)) then while true do if ((v235==(0 -0)) or ((6159 -(1061 + 763))<=(6543 -2489))) then v236=1476 -(758 + 718);while true do if ((v236==((275 -85) -((178 -105) + 117))) or ((1185 + 57)>((6698 -4355) -(305 + 103)))) then v154=v154 + 1 + 0;v91[v233]=v153[v154];break;end end break;end end break;end end end break;end if (((6024 -(43 + (4864 -3433)))>=(2273 -((2469 -(1830 + 60)) + 16))) and (v151==(1092 -((2477 -1542) + 157)))) then local v226=(0 + 0) -(0 -0);local v227;while true do if (((99 + 1029)<=(758 + 698)) and (v226==0)) then v227=268 -(8 + 11 + 249);while true do if ((v227==(1 + 0)) or ((4885 -(711 + 708))<((2088 -(820 + 138)) + (3434 -1693)))) then v151=1571 -(972 + 598);break;end if ((v227==(1175 -(311 + 864))) or ((6057 -4224)>=(2874 -(124 + 468)))) then local v264=337 -(9 + 328);while true do if (((9626 -5590)>2875) and (v264==(1 + 0))) then v227=1 -0;break;end if ((v264==(0 + 0)) or ((2127 -1309)<490)) then v152=v93[1 + 1];v153={v91[v152](v13(v91,v152 + 1 + 0,v93[8 -(14 -9)]))};v264=1 + 0;end end end end break;end end end end break;end end else for v192=v93[417 -(12 + 335 + 68)],v93[1 + 2] do v91[v192]=nil;end end elseif ((v94<=(58 -35)) or ((2 + 42 + 17)==(3740 -(109 + 122)))) then if ((v94<=(16 + 3)) or (((9904 -4265) -3680)>=(4462 -2300))) then if (((4035 -2337)==(7961 -(3482 + 2781))) and (v94<=((1487 -(331 + 1126)) -13))) then if ((v94==(29 -13)) or ((975 -(45 + 367))>=3452)) then do return;end else v91[v93[863 -(562 + 299)]]();end elseif (((9764 -6456)<=(5632 -(94 + 1078))) and (v94>(5 + 13))) then if ((v91[v93[(3 + 1) -2]]~=v93[15 -11]) or ((2650 + 165)==(2314 -1051))) then v68=v68 + (2 -1);else v68=v93[9 -6];end else local v155=0 + 0;local v156;local v157;local v158;while true do if ((v155==((969 -(173 + 796)) + 0)) or ((2159 + 53)>(24060 -19176))) then local v200=0 -0;while true do if (((5593 -2829)==((7721 -3235) -(757 + 965))) and (v200==0)) then v156=v86[v93[1108 -(283 + 822)]];v157=nil;v200=1 + 0 + (1466 -(1074 + 392));end if (((1561 -(1202 + 358))==v200) or ((5218 -1575)>(3158 + 884))) then v155=1565 -(1130 + (844 -(14 + 396)));break;end end end if ((v155==(1333 -(162 + 1170))) or ((5932 -(203 + (3777 -2212)))<=(1914 -(1184 + (577 -286))))) then v158={};v157=v10({},{__index=function(v204,v205)local v213=0 + 0;local v214;local v215;while true do if (((9116 -6859)>(3113 -(633 + (709 -(21 + 76))))) and (v213==(321 -(35 + 285)))) then while true do if (((2043 -(302 + 145))>=(2530 -(1011 + 534))) and (v214==(0 + 0))) then v215=v158[v205];return v215[1 + 0][v215[5 -3]];end end break;end if (((42 + 3875)>((4368 -(452 + 1423)) -877)) and (v213==((2408 -(176 + 1462)) -(35 + 735)))) then v214=0 -0;v215=nil;v213=1 + 0;end end end,__newindex=function(v206,v207,v208)local v216=0 + 0;local v217;local v218;while true do if (((979 + 2973)>=(6794 -4909)) and (v216==(0 + 0))) then v217=0 -0;v218=nil;v216=4 -3;end if ((v216==(1828 -(36 + 1791))) or (4857<328)) then while true do if (((0 -0)==v217) or (((16542 -10258) -2485)>(17067 -12454))) then v218=v158[v207];v218[575 -(231 + 343)][v218[2 + 0]]=v208;break;end end break;end end end});v155=(17 -11) -4;end if ((v155==(2 + 0)) or ((1203 + 1814)>(5075 -1748))) then for v209=(3 -2) + 0,v93[1 + (1035 -(930 + 102))] do local v210=0 -0;local v211;local v212;while true do if ((v210==(4 -3)) or ((2214 -1306)>=(1439 + 1490))) then while true do if (((3038 -(161 + 1660))<(1347 + 3532)) and (v211==(0 + 0))) then local v256=1443 -(1290 + 153);local v257;while true do if (((0 + 0)==v256) or ((220 + 607)==(292 -180))) then v257=430 -(107 + 323);while true do if (((8700 -5588)>(1122 -(535 + 566))) and (v257==(1242 -(31 + 5 + 757 + 449)))) then local v275=0 -0;while true do if ((v275==(0 + 0)) or ((268 + 244)==((7188 -3470) -(733 + 560 + 497)))) then v68=v68 + (3 -2);v212=v84[v68];v275=3 -2;end if (((3193 -(12 + (1582 -(1173 + 358))))>=(450 + 212 + 1717)) and (v275==((55 + 1922) -(1656 + 320)))) then v257=1 + 0;break;end end end if (((504 + 652)>(175 -59)) and (v257==(1 + 0))) then v211=1 + 0;break;end end break;end end end if ((v211==(2 -1)) or ((5405 -(885 + 447))<=(308 + 1456))) then if (((7202 -4371)>(3991 -1271)) and (v212[2 -1]==(9 + 0))) then v158[v209-(1807 -(123 + 1683))]={v91,v212[7 -4]};else v158[v209-(3 -(1959 -(1890 + 67)))]={v33,v212[3 + 0]};end v90[ #v90 + 1 + 0]=v158;break;end end break;end if ((v210==((961 -(222 + 739)) -0)) or ((5634 -((2501 -1732) + 532))<=(2316 -1407))) then local v237=0 -0;while true do if ((v237==(881 -(423 + 342 + 115))) or ((39 + 12)==540)) then v210=1592 -(224 + 1367);break;end if (((3426 -(918 + 796))<(7599 -4883)) and (v237==(0 + 0))) then v211=0;v212=nil;v237=3 -2;end end end end end v91[v93[4 -2]]=v30(v156,v157,v34);break;end end end elseif (((6295 -(217 + 1154))>=(11154 -7799)) and (v94<=(8 + 13))) then if (((5372 -2516)==(1372 + 1484)) and (v94>(46 -26))) then if (((3305 + 562)>=((566 + 21) -299)) and (v91[v93[2 -(0 + 0)]]==v91[v93[339 -(91 + 164 + 80)]])) then v68=v68 + (879 -(561 + 317));else v68=v93[3 + 0];end else local v159=0 -0;local v160;local v161;local v162;while true do if ((v159==(3 -2)) or ((7384 -3350)>(5687 -(545 + 723)))) then v162=nil;while true do if ((v160==(0 + 0)) or ((3215 -(1164 + 824))>=((6338 -(267 + 240)) -(649 + (1761 -(486 + 417)))))) then v161=0 + 0 + 0;v162=nil;v160=1044 -((1110 -(706 + 170)) + 809);end if ((3555<(3604 + 786)) and ((1 + 0)==v160)) then while true do if ((v161==(0 + 0)) or ((210 + (4089 -(45 + 175)))<(14 + 63))) then v162=v93[2 + 0 + 0];v91[v162]=v91[v162](v13(v91,v162 + 1 + 0,v93[215 -(29 + 183)]));break;end end break;end end break;end if (((2265 -1485)<=(3422 -((654 -398) + 467))) and (v159==(0 -0))) then v160=0 + 0;v161=nil;v159=2 -1;end end end elseif ((v94==((31 -24) + 15)) or (((2506 -1313) -690)==(3658 -(275 + (3247 -(1695 + 148)))))) then if ((278<=(4109 -(7485 -4929))) and (v93[2 + 0]==v91[v93[8 -4]])) then v68=v68 + (242 -(38 + 203));else v68=v93[4 -(1 + 0)];end else v91[v93[3 -1]]=v33[v93[6 -3]];end elseif ((v94<=27) or ((64 + 280)>(2225 + 1260))) then if (((8141 -5136)<=(13952 -10176)) and (v94<=(1417 -(690 + 702)))) then if ((v94==(23 + 1)) or ((3031 -(792 + 765))>=(119 + 4248))) then v91[v93[1353 -(192 + 1159)]]={};else local v165=(0 + 0) -0;local v166;local v167;local v168;while true do if ((v165==(0 + 0)) or (((10433 -6666) -(1122 + 402))==((1985 -(397 + 1397)) -83))) then v166=0 + 0;v167=nil;v165=1 + 0;end if ((v165==(4 -3)) or ((1374 + 1654)<(201 + 1664))) then v168=nil;while true do if (((1309 + 148)>=(1757 -(35 + 998))) and (v166==((1015 + 983) -(525 + 563 + 909)))) then for v238=(1 -0) + 0, #v90 do local v239=0 -0;local v240;local v241;local v242;while true do if (((5801 -4271)>(483 + 226)) and (v239==((5 + 742) -(734 + 13)))) then v240=0 + 0;v241=nil;v239=(1 -0) + 0;end if (((10026 -7245)<=(556 + 1968 + 1213)) and (v239==(80 -((65 -41) + 55)))) then v242=nil;while true do if (((12653 -7780)==((19657 -10333) -4451)) and (v240==(2 -(1 + 0)))) then while true do if ((v241==(0 + 0)) or (((5354 -4173) + 458)>(7232 -3604))) then v242=v90[v238];for v277=299 -(38 + 261), #v242 do local v278=0 + 0;local v279;local v280;local v281;local v282;while true do if (((0 + 0 + 0)==v278) or ((16170 -11438)==(1879 -(281 + 103)))) then v279=0 -0;v280=nil;v278=2 -1;end if ((v278==(52 -(43 + 7))) or ((2934 + 651)==(2431 + 622))) then while true do if ((v279==(1524 -(1206 + 318))) or ((14659 -10499)==(34 + 42))) then local v290=1709 -(831 + 878);local v291;while true do if ((((2289 + 1221) -(898 + 773))==1839) and ((941 -(281 + 660))==v290)) then v291=414 -(74 + 340);while true do if (((4251 -1348)>(8545 -5993)) and (v291==(0 + 0))) then v280=v242[v277];v281=v280[1012 -(785 + 226)];v291=1 + 0;end if (((5077 -(63 + 549))==(5573 -(742 + 366))) and ((2 -1)==v291)) then v279=2 -1;break;end end break;end end end if (((477 -236)<(38 + 1909)) and ((1239 -(57 + 1181))==v279)) then v282=v280[590 -(13 + 575)];if (((21109 -16411)>=(4488 -(102 + 751))) and (v281==v91) and (v282>=v167)) then local v293=0 -0;while true do if (((21438 -17122)<=((3691 + 6243) -5363)) and (v293==(622 -(310 + 312)))) then v168[v282]=v281[v282];v280[1 + 0]=v168;break;end end end break;end end break;end if ((v278==(3 -2)) or ((1681 + 1251)<2566)) then v281=nil;v282=nil;v278=926 -(444 + 480);end end end break;end end break;end if (((5488 -(912 + 744))==(8102 -4270)) and (v240==(0 + 0))) then local v268=0 -(0 + 0);while true do if (((8560 -3991)==(6731 -2162)) and (v268==(0 + 0))) then v241=0 + 0;v242=nil;v268=1;end if (((4736 + 167)>=(1087 -656)) and (v268==(1 + 0))) then v240=1 + 0;break;end end end end break;end end end break;end if ((v166==(0 -0)) or ((576 -231)>(7418 -5306))) then v167=v93[2];v168={};v166=1277 -(287 + 989);end end break;end end end elseif (((237 -(59 + 11))<=(2098 -(161 + 407 + 1029))) and (v94>(63 -37))) then v34[v93[931 -(249 + 679)]]=v91[v93[4 -2]];else v91[v93[2]][v93[90 -(35 + 25 + (383 -(272 + 84)))]]=v91[v93[1 + 3]];end elseif (((2183 -((195 -122) + 12))<=(4791 -(370 + 33))) and (v94<=(17 + 12))) then if ((2700<=(11529 -6593)) and (v94==(8 + 20))) then local v171=0 -0;local v172;local v173;local v174;local v175;local v176;local v177;while true do if ((v171==(2 -1)) or ((3426 -(334 + 256))<(235 + 110))) then v174=nil;v175=nil;v171=6 -4;end if (((50 + 117)<(4063 -2700)) and (v171==(3 -(1 + 0)))) then v176=nil;v177=nil;v171=5 -2;end if ((v171==(7 -4)) or ((533 + 221)>(5153 -(84 + 243 + 405)))) then while true do if ((v172==(2 -(1 -0))) or ((3979 -(877 + 54))>=(4467 -(11 + (345 -200))))) then v175=v173 + (1538 -((1057 -629) + 1108));v176={v91[v173](v91[v173 + (1331 -(526 + 804))],v91[v175])};v172=567 -(267 + 298);end if (((2155 -1160)==(137 + 858)) and (v172==(1366 -(254 + 1110)))) then local v228=0 + 0;while true do if ((v228==(0 + 0)) or ((3462 -2525)==(3298 + 278 + 200))) then for v259=2 -(1738 -(1282 + 455)),v174 do v91[v175 + v259]=v176[v259];end v177=v176[998 -(904 + 93)];v228=1003 -(671 + 331);end if (((5893 -(854 + 218))>=(80 + 257)) and (v228==(3 -2))) then v172=2 + 1;break;end end end if (((120 -(44 + 76))==v172) or ((17 + 168 + 128)>(1848 -((3110 -2026) + 265)))) then local v229=909 -(515 + 394);while true do if (((802 + 3546)>=(197 -156)) and (v229==(0 -0))) then v173=v93[1 + 0 + 1];v174=v93[16 -12];v229=1;end if ((v229==((138 -(10 + 127)) + 0)) or ((456 + 301 + 1364)<=(1224 -810))) then v172=1 + 0;break;end end end if (((4561 -(392 + (493 -(123 + 218))))>((775 + 1420) -(1327 + 178))) and (v172==(1114 -(732 + 379)))) then if (v177 or (3192<(5484 -3313))) then local v243=0 -0;while true do if ((v243==(0 -0)) or (((2765 + 2155) -(150 + 871))<=(2077 -(736 + 49)))) then v91[v175]=v177;v68=v93[3 -0];break;end end else v68=v68 + (4 -3);end break;end end break;end if (((2159 -874)>(1536 -(964 + 159))) and (v171==(0 -0))) then v172=0 + 0;v173=nil;v171=1 + 0;end end else v91[v93[1 + 1]][v93[1 + 2]]=v93[1 + 3];end elseif ((v94<=(41 -11)) or ((1563 -(487 + 17))>=(2923 -1356))) then local v179=1409 -(239 + 1170);local v180;while true do if ((v179==(0 + 0)) or ((509 + 2880)<(484 + 1209))) then v180=v93[936 -(494 + 440)];v91[v180]=v91[v180](v91[v180 + ((1 + 2) -2)]);break;end end elseif ((v94>((2132 -1219) -(408 + 474))) or ((1134 + (3327 -(38 + 251)))<(2093 -1362))) then local v194=(19 + 282) -((325 -(27 + 161)) + 164);local v195;while true do if (((3917 -2822)==(1685 -(436 + 154))) and (v194==(32 -(14 + 18)))) then v195=v93[2];v91[v195](v13(v91,v195 + (1 -0),v93[1502 -(592 + 214 + 693)]));break;end end else v91[v93[2]]=v91[v93[8 -5]][v93[(256 -(34 + 216)) -(3 -1)]];end v68=v68 + (1675 -(1552 + 122));break;end if (((1380 + 925)>=(3076 -(89 + 1417))) and (v98==(0 + 0))) then local v104=0 -0;local v105;while true do if (((1963 -1496)>=(559 -325)) and (v104==(0 -0))) then v105=1812 -(137 + 1675);while true do if ((v105==(1 + 0)) or ((544 + 2229)==(66 + 218))) then v98=2 -1;break;end if (((2767 -(2424 -(64 + 277)))<(3741 -1372)) and (v105==(0 + 0))) then local v116=0 + 0;while true do if ((v116==(1 + 0)) or ((3386 -(360 + 177))<(2468 -1360))) then v105=4 -3;break;end if (((6105 -4014)==((3134 -1260) + 217)) and (v116==(0 -0))) then v93=v84[v68];v94=v93[1 + 0];v116=1 -0;end end end end break;end end end end break;end end break;end end end end v67=3;end end end;end return v30(v29(),{},v17)();end if (v18==2) then function v23()local v51=252 -(53 + 199);local v52;local v53;while true do if (v51==(52 -(26 + 25))) then return (v53 * (1659 -(528 + 875))) + v52;end if (v51==(1623 -(99 + 1524))) then v52,v53=v2(v16,v19,v19 + 2 + (0 -0));v19=v19 + 2;v51=(2 -1) + 0;end end end v24=nil;function v24()local v54,v55,v56,v57=v2(v16,v19,v19 + ((5275 -3498) -(1700 + 74)));v19=v19 + 4 + 0;return (v57 * (8445124 + 8332092)) + (v56 * (65578 -(25 + 17))) + (v55 * ((1082 -503) -323)) + v54;end v25=nil;v18=3;end if (v18==1) then function v21(v35,v36,v37)if v37 then local v73=(v35/((199 -(88 + 77 + 32))^(v36-1)))%(2^(((v37-1) -(v36-(1 + 0))) + (550 -(277 + 272))));return v73-(v73%(1589 -(864 + (2892 -2168))));else local v74=(1522 -(989 + 533)) + (0 -0);local v75;while true do if (v74==(0 + 0)) then v75=(4 -2)^(v36-(1 + 0));return (((v35%(v75 + v75))>=v75) and 1) or (0 + 0);end end end end v22=nil;function v22()local v58=v2(v16,v19,v19);v19=v19 + 1;return v58;end v23=nil;v18=2;end if (3==v18) then function v25()local v59=v24();local v60=v24();return (( -(502 -(269 + 231)) * v21(v60,3 + 29)) + (1206 -(100 + 1105))) * ((1 + 1)^(v21(v60,32 -11,522 -(383 + (1074 -(902 + 64)))) -(1866 -(132 + 572 + (282 -143))))) * ((((v21(v60,754 -(282 + 228 + 243),20) * ((240 -((47 -34) + 225))^(48 -16))) + v59)/((954 -(109 + 843))^(18 + 34))) + (1 -(0 + 0)));end v26=nil;function v26(v38)local v61;if  not v38 then v38=v24();if (v38==(442 -(401 + 41))) then return "";end end v61=v4(v16,v19,(v19 + v38) -((497 + 221) -(97 + 620)));v19=v19 + v38;local v62={};for v63=1486 -(1391 + 94), #v61 do v62[v63]=v3(v2(v4(v61,v63,v63)));end return v7(v62);end v27=v24;v18=4;end end end vv9());break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end end end
